폰트의 색: color
폰트이름: font-family: "폰트이름1안", "폰트이름2안",..., sans-serif;
폰트크기: font-size
폰트두께: font-weight
행간: line-height
이태릭체, 일반체: font-style
font-variant:(작은대문자)
축약: (font-style), (font-variant), font-weight, font-size/line-height, font-family;
└> font: 16px/1.3 'Malgun Gothic', sans-serif;

box-model
외곽선: border (border-radius) -->  두께(width), 선의 종류(style), 선의 색깔(color)
외곽선의 외곽: outline
바깥여백: margin 
안쪽여백: padding
축약: border: 1px solid red;

background: 
background-color: 색상
background-image: url(이미지경로)
background-repeat: no-repeat, repeat, repeat-x, repeat-y, inherit;
background-attatchment: scroll(기본값), local, fixed, initial, inherit
scroll(기본값): 이미지가 요소에 상대적인 위치(요소 안에서는 고정상태)
local: 이미지가 요서에 상대적인 위치(요소안의 내용과 같은 취급)
fixed: 이미지가 뷰화면에 고정
inherit: 부모값을 따라라

display: inline과 block ==> inline-block: 인라인과 블록 둘다 적용
max-width: 
min-width:
 
목록태그
ul -> 번호가 없는 목록
ol -> 번호가 있는 목록
position: 
- static: (기본값), 위치값X, margin과 다른 box에 비교되어 위치한다.
- absolute: 위치값(위치값이 있는 부모 박스를 기준)
- relative: 위치값을 가지면서 다른 박스들과 비교한 위치할 수 있따.
absolute, relative는 z-index값을 이용하여 상하를 결정 지을 수 있따. 
fixed - view 포인트에 고정되는 박스
sticky
float: 
left
right
none
inherit
clear:left;
clear:right
clear:both

git
- VCS(Version Control System)프로그램
- 형상관리툴(시간에 따른 작업물들을 관리해준다.)
- 다차원적 팀작업 하는 것이 가능

https://sourcetreeapp.com/ 설치
git config --global user.name "본인아이디또는 이름" (초기화)
git branch
//기본 브랜치명을 변경
git config --global init.defaultBranch main
//폴더를 git이 관리 하도록 하는 명령
git init
//git의 상태를 확인
git status

//git에게 관리를 맡기지 않는 것들을 저장하는 파일
.gitignore(ex. react)  등록방법(git-sem.com/docs/gitignore에서 확인해 볼 수 있음)
# 주석은 이거
# 모든 file.c
# /를 제외한 모든 문자열과 매칭
*
# /를 포함한 모든 문자열과 매칭
**
# /를 제외한 하나의 문자와 매칭
?
# []안에 있는 모든 각각의 문자들과 매칭
[abc]

#{ a,b ,c}{}안에 있는 ,로 구분된 각각 문자열들과 매칭

# [^abc] []안에 있는 모든 각각의 문자들을 제외한 문자들과 매칭
[a-z] []안에서 - 사이에 있는 첫 문자와 마지막 문자 범위에 있는 모든 문자들에 대해 매칭
# / 
/부터 시작하는 경로 패턴은 하위 디렉토리에 반복적으로 적용되지 않음
# !
!로 시작하는 경로 패턴은 .gitignore에서 제외되며, 무시되지 않는다.

ex)
#확장자가 .js파일은 무시
*.js

#test.js는 무시하지 않음
!test.js

# 현재 디렉토리에 있는 test2.js 파일은 무시하지만, 하위 디렉토리에 있는 test2.js는 무시하지 않음.
/test2.js

#src의 하위 디렉토리에 있는 모든 확장자가 js인 파일은 무시
src/ *.js


1. git에 등록하는 방법(변화한 부분을 저장)
2. 되돌리는 두 가지 방법 -
	1) reset
	2) reverts
3. gui(sourcetree)갖고 진행해보기

*git에 등록하는 방법
 - 현상태를 확인(변화한 상태를 확인) => git status
 - 모든 파일을 등록
	git add .
 - add다음에 해야 하는 commit (git이 관리 시작)
 git commit -m "메시지"
 로그 확인 git log

cf) vi 에디터 사용법
k: 커서를 한칸 위로 이동
 j: 커서를 한칸 아래로 이동
종료: !q(그냥종료) / !wq(저장하고 종료)

명령모드: 
입력모드: 

add + commit을 동시에 단> 삭제 이후 다른 파일 수가된 경우 사용할 수 없음
git commit -am "메시지"
branch -- 작업하는 위치
git init
git status
git add "파일명"
git commit -m "커밋의 내용"
.gitignore --> git이 관리하지 않는 파일이나 폴더를 지정
git log :

Javascript
문제: 하루 걷는 양을 물어보고 답변이 10000 이상이면
매우좋은 습관을 갖고 계시군요. 라고 출력하시오

문제: 당신이 좋아하는 숫자는?

짝수이면 "당신이 좋아하는 숫자는 짝수이군요."
홀수면 "당신이 좋아하는 숫자는 홀수이군

문제: 당신은 몇월달을 좋아합니까?
12 ~ 2월 스키타기 좋은 겨울이군요
3 ~ 5 햇살 가득한 봄이군요.
6 ~ 8 여행가기 좋은 여름이네요
9 ~ 11 독서의 계절 가을이네요.

switch(조건){
 case "a":
	asdfsadfsadfasdfasdf
	break;
 case "b":
	sdfsdfasdfopkasodfpkaos
 	break;
 case "c": msldgmsl;mgl;smgl;sgsl;gml;sg;lsgdl;
	break;
		default "c":
		ㄹㄹㄹㄹㄹㄹㄹㄹㄹㄹㄹ
}
문제: 10부터 20까지의 수 중에서 홀수는 파랑색 글씨
        짝수는 빨강색 글씨로 출력하세요.


































